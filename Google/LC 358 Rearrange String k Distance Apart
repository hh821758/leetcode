LC 358 Rearrange String k Distance Apart

Google

Hard

aaabc k=2
abaca
这个题让给出一种rearrange的方法。 变种题还可以有判断是否能rearrange，以及返回所有arrange的方法或者arrange的种数。

判断是否能rearrange的方法以前学到了，可以判断如果把出现频率最高的数按照k值排列好，是否会导致string长度超过原string长度。

返回所有arrange方法，可以用dfs，每次都选取所有当前能放入的char可能性，估计会很难，因为第一个位置不一定要放最大频率的数。


class Solution {
    public String rearrangeString(String s, int k) {
        int[] map = new int[26];
        for(char c:s.toCharArray()){
            map[c-'a']++;
        }
        
        int[] next = new int[26];
        
        StringBuilder sb = new StringBuilder();
        for(int i=0;i<s.length();i++){
            int index = findValid(map, next, i, k);
            if(index==-1) return "";
            sb.append((char)('a'+index));
        }
        return sb.toString();
    }
    
    public int findValid(int[] map, int[] next, int i, int k){
        int index = -1;
        int max = 0;
        for(int j=0;j<map.length;j++){
            if(map[j]>max && next[j]<=i){
                index = j;
                max = map[j];
            }
        }
        if(max>0){
            map[index]--;
            next[index]=i+k;
        }
        return index;
    }
}